{"ast":null,"code":"const handleSearch = async () => {\n  if (!searchTerm.trim()) {\n    setVendors([]); // Clear vendors if search is empty\n    return;\n  }\n  setLoading(true);\n  try {\n    const response = await axios.get(`http://localhost:5000/vendors?search=${searchTerm}`);\n    setVendors(response.data);\n  } catch (error) {\n    console.error(\"Error fetching vendors:\", error);\n    setVendors([]); // Reset vendors on error\n  }\n  setLoading(false);\n};","map":{"version":3,"names":["handleSearch","searchTerm","trim","setVendors","setLoading","response","axios","get","data","error","console"],"sources":["C:/Users/SourceCode/Downloads/local-event-planner/src/App.js"],"sourcesContent":["const handleSearch = async () => {\n    if (!searchTerm.trim()) {\n        setVendors([]); // Clear vendors if search is empty\n        return;\n    }\n\n    setLoading(true);\n    try {\n        const response = await axios.get(`http://localhost:5000/vendors?search=${searchTerm}`);\n        setVendors(response.data);\n    } catch (error) {\n        console.error(\"Error fetching vendors:\", error);\n        setVendors([]); // Reset vendors on error\n    }\n    setLoading(false);\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,CAAC,EAAE;IACpBC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB;EACJ;EAEAC,UAAU,CAAC,IAAI,CAAC;EAChB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,wCAAwCN,UAAU,EAAE,CAAC;IACtFE,UAAU,CAACE,QAAQ,CAACG,IAAI,CAAC;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/CN,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EACpB;EACAC,UAAU,CAAC,KAAK,CAAC;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}